// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: flowstate/command/v1/commands.proto

package commandv1

import (
	v1 "github.com/makasim/flowstatesrv/protogen/flowstate/state/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnyCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Command:
	//
	//	*AnyCommand_Transit
	//	*AnyCommand_Pause
	//	*AnyCommand_Resume
	//	*AnyCommand_End
	//	*AnyCommand_Execute
	//	*AnyCommand_Delay
	//	*AnyCommand_Commit
	//	*AnyCommand_Noop
	//	*AnyCommand_Serialize
	//	*AnyCommand_Deserialize
	Command isAnyCommand_Command `protobuf_oneof:"command"`
}

func (x *AnyCommand) Reset() {
	*x = AnyCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyCommand) ProtoMessage() {}

func (x *AnyCommand) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyCommand.ProtoReflect.Descriptor instead.
func (*AnyCommand) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{0}
}

func (m *AnyCommand) GetCommand() isAnyCommand_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *AnyCommand) GetTransit() *Transit {
	if x, ok := x.GetCommand().(*AnyCommand_Transit); ok {
		return x.Transit
	}
	return nil
}

func (x *AnyCommand) GetPause() *Pause {
	if x, ok := x.GetCommand().(*AnyCommand_Pause); ok {
		return x.Pause
	}
	return nil
}

func (x *AnyCommand) GetResume() *Resume {
	if x, ok := x.GetCommand().(*AnyCommand_Resume); ok {
		return x.Resume
	}
	return nil
}

func (x *AnyCommand) GetEnd() *End {
	if x, ok := x.GetCommand().(*AnyCommand_End); ok {
		return x.End
	}
	return nil
}

func (x *AnyCommand) GetExecute() *Execute {
	if x, ok := x.GetCommand().(*AnyCommand_Execute); ok {
		return x.Execute
	}
	return nil
}

func (x *AnyCommand) GetDelay() *Delay {
	if x, ok := x.GetCommand().(*AnyCommand_Delay); ok {
		return x.Delay
	}
	return nil
}

func (x *AnyCommand) GetCommit() *Commit {
	if x, ok := x.GetCommand().(*AnyCommand_Commit); ok {
		return x.Commit
	}
	return nil
}

func (x *AnyCommand) GetNoop() *Noop {
	if x, ok := x.GetCommand().(*AnyCommand_Noop); ok {
		return x.Noop
	}
	return nil
}

func (x *AnyCommand) GetSerialize() *Serialize {
	if x, ok := x.GetCommand().(*AnyCommand_Serialize); ok {
		return x.Serialize
	}
	return nil
}

func (x *AnyCommand) GetDeserialize() *Deserialize {
	if x, ok := x.GetCommand().(*AnyCommand_Deserialize); ok {
		return x.Deserialize
	}
	return nil
}

type isAnyCommand_Command interface {
	isAnyCommand_Command()
}

type AnyCommand_Transit struct {
	Transit *Transit `protobuf:"bytes,1,opt,name=transit,proto3,oneof"`
}

type AnyCommand_Pause struct {
	Pause *Pause `protobuf:"bytes,2,opt,name=pause,proto3,oneof"`
}

type AnyCommand_Resume struct {
	Resume *Resume `protobuf:"bytes,3,opt,name=resume,proto3,oneof"`
}

type AnyCommand_End struct {
	End *End `protobuf:"bytes,4,opt,name=end,proto3,oneof"`
}

type AnyCommand_Execute struct {
	Execute *Execute `protobuf:"bytes,5,opt,name=execute,proto3,oneof"`
}

type AnyCommand_Delay struct {
	Delay *Delay `protobuf:"bytes,6,opt,name=delay,proto3,oneof"`
}

type AnyCommand_Commit struct {
	Commit *Commit `protobuf:"bytes,7,opt,name=commit,proto3,oneof"`
}

type AnyCommand_Noop struct {
	Noop *Noop `protobuf:"bytes,8,opt,name=noop,proto3,oneof"`
}

type AnyCommand_Serialize struct {
	Serialize *Serialize `protobuf:"bytes,9,opt,name=serialize,proto3,oneof"`
}

type AnyCommand_Deserialize struct {
	Deserialize *Deserialize `protobuf:"bytes,10,opt,name=deserialize,proto3,oneof"`
}

func (*AnyCommand_Transit) isAnyCommand_Command() {}

func (*AnyCommand_Pause) isAnyCommand_Command() {}

func (*AnyCommand_Resume) isAnyCommand_Command() {}

func (*AnyCommand_End) isAnyCommand_Command() {}

func (*AnyCommand_Execute) isAnyCommand_Command() {}

func (*AnyCommand_Delay) isAnyCommand_Command() {}

func (*AnyCommand_Commit) isAnyCommand_Command() {}

func (*AnyCommand_Noop) isAnyCommand_Command() {}

func (*AnyCommand_Serialize) isAnyCommand_Command() {}

func (*AnyCommand_Deserialize) isAnyCommand_Command() {}

type AnyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*AnyResult_Transit
	//	*AnyResult_Pause
	//	*AnyResult_Resume
	//	*AnyResult_End
	//	*AnyResult_Execute
	//	*AnyResult_Delay
	//	*AnyResult_Commit
	//	*AnyResult_Noop
	//	*AnyResult_Serialize
	//	*AnyResult_Deserialize
	Result isAnyResult_Result `protobuf_oneof:"result"`
}

func (x *AnyResult) Reset() {
	*x = AnyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyResult) ProtoMessage() {}

func (x *AnyResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyResult.ProtoReflect.Descriptor instead.
func (*AnyResult) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{1}
}

func (m *AnyResult) GetResult() isAnyResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *AnyResult) GetTransit() *TransitResult {
	if x, ok := x.GetResult().(*AnyResult_Transit); ok {
		return x.Transit
	}
	return nil
}

func (x *AnyResult) GetPause() *PauseResult {
	if x, ok := x.GetResult().(*AnyResult_Pause); ok {
		return x.Pause
	}
	return nil
}

func (x *AnyResult) GetResume() *ResumeResult {
	if x, ok := x.GetResult().(*AnyResult_Resume); ok {
		return x.Resume
	}
	return nil
}

func (x *AnyResult) GetEnd() *EndResult {
	if x, ok := x.GetResult().(*AnyResult_End); ok {
		return x.End
	}
	return nil
}

func (x *AnyResult) GetExecute() *ExecuteResult {
	if x, ok := x.GetResult().(*AnyResult_Execute); ok {
		return x.Execute
	}
	return nil
}

func (x *AnyResult) GetDelay() *DelayResult {
	if x, ok := x.GetResult().(*AnyResult_Delay); ok {
		return x.Delay
	}
	return nil
}

func (x *AnyResult) GetCommit() *CommitResult {
	if x, ok := x.GetResult().(*AnyResult_Commit); ok {
		return x.Commit
	}
	return nil
}

func (x *AnyResult) GetNoop() *NoopResult {
	if x, ok := x.GetResult().(*AnyResult_Noop); ok {
		return x.Noop
	}
	return nil
}

func (x *AnyResult) GetSerialize() *SerializeResult {
	if x, ok := x.GetResult().(*AnyResult_Serialize); ok {
		return x.Serialize
	}
	return nil
}

func (x *AnyResult) GetDeserialize() *DeserializeResult {
	if x, ok := x.GetResult().(*AnyResult_Deserialize); ok {
		return x.Deserialize
	}
	return nil
}

type isAnyResult_Result interface {
	isAnyResult_Result()
}

type AnyResult_Transit struct {
	Transit *TransitResult `protobuf:"bytes,1,opt,name=transit,proto3,oneof"`
}

type AnyResult_Pause struct {
	Pause *PauseResult `protobuf:"bytes,2,opt,name=pause,proto3,oneof"`
}

type AnyResult_Resume struct {
	Resume *ResumeResult `protobuf:"bytes,3,opt,name=resume,proto3,oneof"`
}

type AnyResult_End struct {
	End *EndResult `protobuf:"bytes,4,opt,name=end,proto3,oneof"`
}

type AnyResult_Execute struct {
	Execute *ExecuteResult `protobuf:"bytes,5,opt,name=execute,proto3,oneof"`
}

type AnyResult_Delay struct {
	Delay *DelayResult `protobuf:"bytes,6,opt,name=delay,proto3,oneof"`
}

type AnyResult_Commit struct {
	Commit *CommitResult `protobuf:"bytes,7,opt,name=commit,proto3,oneof"`
}

type AnyResult_Noop struct {
	Noop *NoopResult `protobuf:"bytes,8,opt,name=noop,proto3,oneof"`
}

type AnyResult_Serialize struct {
	Serialize *SerializeResult `protobuf:"bytes,9,opt,name=serialize,proto3,oneof"`
}

type AnyResult_Deserialize struct {
	Deserialize *DeserializeResult `protobuf:"bytes,10,opt,name=deserialize,proto3,oneof"`
}

func (*AnyResult_Transit) isAnyResult_Result() {}

func (*AnyResult_Pause) isAnyResult_Result() {}

func (*AnyResult_Resume) isAnyResult_Result() {}

func (*AnyResult_End) isAnyResult_Result() {}

func (*AnyResult_Execute) isAnyResult_Result() {}

func (*AnyResult_Delay) isAnyResult_Result() {}

func (*AnyResult_Commit) isAnyResult_Result() {}

func (*AnyResult_Noop) isAnyResult_Result() {}

func (*AnyResult_Serialize) isAnyResult_Result() {}

func (*AnyResult_Deserialize) isAnyResult_Result() {}

type Transit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
	FlowId   string       `protobuf:"bytes,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
}

func (x *Transit) Reset() {
	*x = Transit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transit) ProtoMessage() {}

func (x *Transit) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transit.ProtoReflect.Descriptor instead.
func (*Transit) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{2}
}

func (x *Transit) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

func (x *Transit) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

type TransitResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
}

func (x *TransitResult) Reset() {
	*x = TransitResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransitResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitResult) ProtoMessage() {}

func (x *TransitResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitResult.ProtoReflect.Descriptor instead.
func (*TransitResult) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{3}
}

func (x *TransitResult) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

type Pause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef    *v1.StateRef       `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
	WithTransit *Pause_WithTransit `protobuf:"bytes,2,opt,name=with_transit,json=withTransit,proto3" json:"with_transit,omitempty"`
}

func (x *Pause) Reset() {
	*x = Pause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pause) ProtoMessage() {}

func (x *Pause) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pause.ProtoReflect.Descriptor instead.
func (*Pause) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{4}
}

func (x *Pause) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

func (x *Pause) GetWithTransit() *Pause_WithTransit {
	if x != nil {
		return x.WithTransit
	}
	return nil
}

type PauseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
}

func (x *PauseResult) Reset() {
	*x = PauseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseResult) ProtoMessage() {}

func (x *PauseResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseResult.ProtoReflect.Descriptor instead.
func (*PauseResult) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{5}
}

func (x *PauseResult) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

type Resume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
}

func (x *Resume) Reset() {
	*x = Resume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resume) ProtoMessage() {}

func (x *Resume) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resume.ProtoReflect.Descriptor instead.
func (*Resume) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{6}
}

func (x *Resume) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

type ResumeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
}

func (x *ResumeResult) Reset() {
	*x = ResumeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeResult) ProtoMessage() {}

func (x *ResumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeResult.ProtoReflect.Descriptor instead.
func (*ResumeResult) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{7}
}

func (x *ResumeResult) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

type End struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
}

func (x *End) Reset() {
	*x = End{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *End) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*End) ProtoMessage() {}

func (x *End) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use End.ProtoReflect.Descriptor instead.
func (*End) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{8}
}

func (x *End) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

type EndResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
}

func (x *EndResult) Reset() {
	*x = EndResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndResult) ProtoMessage() {}

func (x *EndResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndResult.ProtoReflect.Descriptor instead.
func (*EndResult) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{9}
}

func (x *EndResult) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

type Execute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
}

func (x *Execute) Reset() {
	*x = Execute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Execute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execute) ProtoMessage() {}

func (x *Execute) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execute.ProtoReflect.Descriptor instead.
func (*Execute) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{10}
}

func (x *Execute) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

type ExecuteResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
}

func (x *ExecuteResult) Reset() {
	*x = ExecuteResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResult) ProtoMessage() {}

func (x *ExecuteResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResult.ProtoReflect.Descriptor instead.
func (*ExecuteResult) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{11}
}

func (x *ExecuteResult) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

type Delay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef   *v1.StateRef      `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
	Duration   string            `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	WithCommit *Delay_WithCommit `protobuf:"bytes,3,opt,name=with_commit,json=withCommit,proto3" json:"with_commit,omitempty"`
}

func (x *Delay) Reset() {
	*x = Delay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delay) ProtoMessage() {}

func (x *Delay) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delay.ProtoReflect.Descriptor instead.
func (*Delay) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{12}
}

func (x *Delay) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

func (x *Delay) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Delay) GetWithCommit() *Delay_WithCommit {
	if x != nil {
		return x.WithCommit
	}
	return nil
}

type DelayResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
	Duration string       `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Commit   bool         `protobuf:"varint,3,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *DelayResult) Reset() {
	*x = DelayResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelayResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayResult) ProtoMessage() {}

func (x *DelayResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayResult.ProtoReflect.Descriptor instead.
func (*DelayResult) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{13}
}

func (x *DelayResult) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

func (x *DelayResult) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *DelayResult) GetCommit() bool {
	if x != nil {
		return x.Commit
	}
	return false
}

type Commit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commands []*AnyCommand `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *Commit) Reset() {
	*x = Commit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{14}
}

func (x *Commit) GetCommands() []*AnyCommand {
	if x != nil {
		return x.Commands
	}
	return nil
}

type CommitResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*AnyResult `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *CommitResult) Reset() {
	*x = CommitResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResult) ProtoMessage() {}

func (x *CommitResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResult.ProtoReflect.Descriptor instead.
func (*CommitResult) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{15}
}

func (x *CommitResult) GetResults() []*AnyResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type Noop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
}

func (x *Noop) Reset() {
	*x = Noop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Noop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Noop) ProtoMessage() {}

func (x *Noop) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Noop.ProtoReflect.Descriptor instead.
func (*Noop) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{16}
}

func (x *Noop) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

type NoopResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRef *v1.StateRef `protobuf:"bytes,1,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
}

func (x *NoopResult) Reset() {
	*x = NoopResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoopResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoopResult) ProtoMessage() {}

func (x *NoopResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoopResult.ProtoReflect.Descriptor instead.
func (*NoopResult) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{17}
}

func (x *NoopResult) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

type Serialize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializableStateRef *v1.StateRef `protobuf:"bytes,1,opt,name=serializable_state_ref,json=serializableStateRef,proto3" json:"serializable_state_ref,omitempty"`
	StateRef             *v1.StateRef `protobuf:"bytes,2,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
	Annotation           string       `protobuf:"bytes,3,opt,name=annotation,proto3" json:"annotation,omitempty"`
}

func (x *Serialize) Reset() {
	*x = Serialize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Serialize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Serialize) ProtoMessage() {}

func (x *Serialize) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Serialize.ProtoReflect.Descriptor instead.
func (*Serialize) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{18}
}

func (x *Serialize) GetSerializableStateRef() *v1.StateRef {
	if x != nil {
		return x.SerializableStateRef
	}
	return nil
}

func (x *Serialize) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

func (x *Serialize) GetAnnotation() string {
	if x != nil {
		return x.Annotation
	}
	return ""
}

type SerializeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializableStateRef *v1.StateRef `protobuf:"bytes,1,opt,name=serializable_state_ref,json=serializableStateRef,proto3" json:"serializable_state_ref,omitempty"`
	StateRef             *v1.StateRef `protobuf:"bytes,2,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
	Annotation           string       `protobuf:"bytes,3,opt,name=annotation,proto3" json:"annotation,omitempty"`
}

func (x *SerializeResult) Reset() {
	*x = SerializeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializeResult) ProtoMessage() {}

func (x *SerializeResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializeResult.ProtoReflect.Descriptor instead.
func (*SerializeResult) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{19}
}

func (x *SerializeResult) GetSerializableStateRef() *v1.StateRef {
	if x != nil {
		return x.SerializableStateRef
	}
	return nil
}

func (x *SerializeResult) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

func (x *SerializeResult) GetAnnotation() string {
	if x != nil {
		return x.Annotation
	}
	return ""
}

type Deserialize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeserializedStateRef *v1.StateRef `protobuf:"bytes,1,opt,name=deserialized_state_ref,json=deserializedStateRef,proto3" json:"deserialized_state_ref,omitempty"`
	StateRef             *v1.StateRef `protobuf:"bytes,2,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
	Annotation           string       `protobuf:"bytes,3,opt,name=annotation,proto3" json:"annotation,omitempty"`
}

func (x *Deserialize) Reset() {
	*x = Deserialize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deserialize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deserialize) ProtoMessage() {}

func (x *Deserialize) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deserialize.ProtoReflect.Descriptor instead.
func (*Deserialize) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{20}
}

func (x *Deserialize) GetDeserializedStateRef() *v1.StateRef {
	if x != nil {
		return x.DeserializedStateRef
	}
	return nil
}

func (x *Deserialize) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

func (x *Deserialize) GetAnnotation() string {
	if x != nil {
		return x.Annotation
	}
	return ""
}

type DeserializeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeserializedStateRef *v1.StateRef `protobuf:"bytes,1,opt,name=deserialized_state_ref,json=deserializedStateRef,proto3" json:"deserialized_state_ref,omitempty"`
	StateRef             *v1.StateRef `protobuf:"bytes,2,opt,name=state_ref,json=stateRef,proto3" json:"state_ref,omitempty"`
	Annotation           string       `protobuf:"bytes,3,opt,name=annotation,proto3" json:"annotation,omitempty"`
}

func (x *DeserializeResult) Reset() {
	*x = DeserializeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeserializeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeserializeResult) ProtoMessage() {}

func (x *DeserializeResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeserializeResult.ProtoReflect.Descriptor instead.
func (*DeserializeResult) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{21}
}

func (x *DeserializeResult) GetDeserializedStateRef() *v1.StateRef {
	if x != nil {
		return x.DeserializedStateRef
	}
	return nil
}

func (x *DeserializeResult) GetStateRef() *v1.StateRef {
	if x != nil {
		return x.StateRef
	}
	return nil
}

func (x *DeserializeResult) GetAnnotation() string {
	if x != nil {
		return x.Annotation
	}
	return ""
}

type Pause_WithTransit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId string `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
}

func (x *Pause_WithTransit) Reset() {
	*x = Pause_WithTransit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pause_WithTransit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pause_WithTransit) ProtoMessage() {}

func (x *Pause_WithTransit) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pause_WithTransit.ProtoReflect.Descriptor instead.
func (*Pause_WithTransit) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Pause_WithTransit) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

type Delay_WithCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commit bool `protobuf:"varint,1,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *Delay_WithCommit) Reset() {
	*x = Delay_WithCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_command_v1_commands_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delay_WithCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delay_WithCommit) ProtoMessage() {}

func (x *Delay_WithCommit) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_command_v1_commands_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delay_WithCommit.ProtoReflect.Descriptor instead.
func (*Delay_WithCommit) Descriptor() ([]byte, []int) {
	return file_flowstate_command_v1_commands_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Delay_WithCommit) GetCommit() bool {
	if x != nil {
		return x.Commit
	}
	return false
}

var File_flowstate_command_v1_commands_proto protoreflect.FileDescriptor

var file_flowstate_command_v1_commands_proto_rawDesc = []byte{
	0x0a, 0x23, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x04, 0x0a, 0x0a,
	0x41, 0x6e, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x48, 0x00, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x12, 0x39, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x05,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x48, 0x00, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x6f, 0x6f,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x6f, 0x70, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6f, 0x70, 0x12, 0x3f, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x45, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x8a,
	0x05, 0x0a, 0x09, 0x41, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x07,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x12, 0x39, 0x0a,
	0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48,
	0x00, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x07, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x05,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x3c, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x6e, 0x6f, 0x6f, 0x70, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x6f, 0x70, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6f, 0x70, 0x12, 0x45, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5d, 0x0a, 0x07, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x66, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x0d, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x22, 0xb6, 0x01, 0x0a, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x12, 0x4a, 0x0a, 0x0c, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x1a, 0x26, 0x0a, 0x0b, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22,
	0x48, 0x0a, 0x0b, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x22, 0x43, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x22, 0x49,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x22, 0x40, 0x0a, 0x03, 0x45, 0x6e, 0x64,
	0x12, 0x39, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x22, 0x46, 0x0a, 0x09, 0x45,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x66, 0x22, 0x44, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x39,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x22, 0x4a, 0x0a, 0x0d, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x66, 0x22, 0xcd, 0x01, 0x0a, 0x05, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12,
	0x39, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x1a,
	0x24, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x7c, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x22, 0x46, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x3c, 0x0a,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x49, 0x0a, 0x0c, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x41, 0x0a, 0x04, 0x4e, 0x6f, 0x6f, 0x70, 0x12, 0x39,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x22, 0x47, 0x0a, 0x0a, 0x4e, 0x6f, 0x6f,
	0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x66, 0x22, 0xba, 0x01, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x12, 0x52, 0x0a, 0x16, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x14,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x66, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xc0, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x52, 0x0a, 0x16, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x66, 0x52, 0x14, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x12, 0x52, 0x0a, 0x16, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66,
	0x52, 0x14, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x52, 0x0a, 0x16, 0x64, 0x65, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x14, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x12, 0x39, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0xe4, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x42, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x61, 0x6b, 0x61, 0x73, 0x69, 0x6d, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x72, 0x76, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x46, 0x43, 0x58, 0xaa, 0x02, 0x14, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x46, 0x6c, 0x6f,
	0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x20, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5c, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x3a, 0x3a, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flowstate_command_v1_commands_proto_rawDescOnce sync.Once
	file_flowstate_command_v1_commands_proto_rawDescData = file_flowstate_command_v1_commands_proto_rawDesc
)

func file_flowstate_command_v1_commands_proto_rawDescGZIP() []byte {
	file_flowstate_command_v1_commands_proto_rawDescOnce.Do(func() {
		file_flowstate_command_v1_commands_proto_rawDescData = protoimpl.X.CompressGZIP(file_flowstate_command_v1_commands_proto_rawDescData)
	})
	return file_flowstate_command_v1_commands_proto_rawDescData
}

var file_flowstate_command_v1_commands_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_flowstate_command_v1_commands_proto_goTypes = []interface{}{
	(*AnyCommand)(nil),        // 0: flowstate.command.v1.AnyCommand
	(*AnyResult)(nil),         // 1: flowstate.command.v1.AnyResult
	(*Transit)(nil),           // 2: flowstate.command.v1.Transit
	(*TransitResult)(nil),     // 3: flowstate.command.v1.TransitResult
	(*Pause)(nil),             // 4: flowstate.command.v1.Pause
	(*PauseResult)(nil),       // 5: flowstate.command.v1.PauseResult
	(*Resume)(nil),            // 6: flowstate.command.v1.Resume
	(*ResumeResult)(nil),      // 7: flowstate.command.v1.ResumeResult
	(*End)(nil),               // 8: flowstate.command.v1.End
	(*EndResult)(nil),         // 9: flowstate.command.v1.EndResult
	(*Execute)(nil),           // 10: flowstate.command.v1.Execute
	(*ExecuteResult)(nil),     // 11: flowstate.command.v1.ExecuteResult
	(*Delay)(nil),             // 12: flowstate.command.v1.Delay
	(*DelayResult)(nil),       // 13: flowstate.command.v1.DelayResult
	(*Commit)(nil),            // 14: flowstate.command.v1.Commit
	(*CommitResult)(nil),      // 15: flowstate.command.v1.CommitResult
	(*Noop)(nil),              // 16: flowstate.command.v1.Noop
	(*NoopResult)(nil),        // 17: flowstate.command.v1.NoopResult
	(*Serialize)(nil),         // 18: flowstate.command.v1.Serialize
	(*SerializeResult)(nil),   // 19: flowstate.command.v1.SerializeResult
	(*Deserialize)(nil),       // 20: flowstate.command.v1.Deserialize
	(*DeserializeResult)(nil), // 21: flowstate.command.v1.DeserializeResult
	(*Pause_WithTransit)(nil), // 22: flowstate.command.v1.Pause.WithTransit
	(*Delay_WithCommit)(nil),  // 23: flowstate.command.v1.Delay.WithCommit
	(*v1.StateRef)(nil),       // 24: flowstate.state.v1.StateRef
}
var file_flowstate_command_v1_commands_proto_depIdxs = []int32{
	2,  // 0: flowstate.command.v1.AnyCommand.transit:type_name -> flowstate.command.v1.Transit
	4,  // 1: flowstate.command.v1.AnyCommand.pause:type_name -> flowstate.command.v1.Pause
	6,  // 2: flowstate.command.v1.AnyCommand.resume:type_name -> flowstate.command.v1.Resume
	8,  // 3: flowstate.command.v1.AnyCommand.end:type_name -> flowstate.command.v1.End
	10, // 4: flowstate.command.v1.AnyCommand.execute:type_name -> flowstate.command.v1.Execute
	12, // 5: flowstate.command.v1.AnyCommand.delay:type_name -> flowstate.command.v1.Delay
	14, // 6: flowstate.command.v1.AnyCommand.commit:type_name -> flowstate.command.v1.Commit
	16, // 7: flowstate.command.v1.AnyCommand.noop:type_name -> flowstate.command.v1.Noop
	18, // 8: flowstate.command.v1.AnyCommand.serialize:type_name -> flowstate.command.v1.Serialize
	20, // 9: flowstate.command.v1.AnyCommand.deserialize:type_name -> flowstate.command.v1.Deserialize
	3,  // 10: flowstate.command.v1.AnyResult.transit:type_name -> flowstate.command.v1.TransitResult
	5,  // 11: flowstate.command.v1.AnyResult.pause:type_name -> flowstate.command.v1.PauseResult
	7,  // 12: flowstate.command.v1.AnyResult.resume:type_name -> flowstate.command.v1.ResumeResult
	9,  // 13: flowstate.command.v1.AnyResult.end:type_name -> flowstate.command.v1.EndResult
	11, // 14: flowstate.command.v1.AnyResult.execute:type_name -> flowstate.command.v1.ExecuteResult
	13, // 15: flowstate.command.v1.AnyResult.delay:type_name -> flowstate.command.v1.DelayResult
	15, // 16: flowstate.command.v1.AnyResult.commit:type_name -> flowstate.command.v1.CommitResult
	17, // 17: flowstate.command.v1.AnyResult.noop:type_name -> flowstate.command.v1.NoopResult
	19, // 18: flowstate.command.v1.AnyResult.serialize:type_name -> flowstate.command.v1.SerializeResult
	21, // 19: flowstate.command.v1.AnyResult.deserialize:type_name -> flowstate.command.v1.DeserializeResult
	24, // 20: flowstate.command.v1.Transit.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 21: flowstate.command.v1.TransitResult.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 22: flowstate.command.v1.Pause.state_ref:type_name -> flowstate.state.v1.StateRef
	22, // 23: flowstate.command.v1.Pause.with_transit:type_name -> flowstate.command.v1.Pause.WithTransit
	24, // 24: flowstate.command.v1.PauseResult.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 25: flowstate.command.v1.Resume.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 26: flowstate.command.v1.ResumeResult.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 27: flowstate.command.v1.End.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 28: flowstate.command.v1.EndResult.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 29: flowstate.command.v1.Execute.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 30: flowstate.command.v1.ExecuteResult.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 31: flowstate.command.v1.Delay.state_ref:type_name -> flowstate.state.v1.StateRef
	23, // 32: flowstate.command.v1.Delay.with_commit:type_name -> flowstate.command.v1.Delay.WithCommit
	24, // 33: flowstate.command.v1.DelayResult.state_ref:type_name -> flowstate.state.v1.StateRef
	0,  // 34: flowstate.command.v1.Commit.commands:type_name -> flowstate.command.v1.AnyCommand
	1,  // 35: flowstate.command.v1.CommitResult.results:type_name -> flowstate.command.v1.AnyResult
	24, // 36: flowstate.command.v1.Noop.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 37: flowstate.command.v1.NoopResult.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 38: flowstate.command.v1.Serialize.serializable_state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 39: flowstate.command.v1.Serialize.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 40: flowstate.command.v1.SerializeResult.serializable_state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 41: flowstate.command.v1.SerializeResult.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 42: flowstate.command.v1.Deserialize.deserialized_state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 43: flowstate.command.v1.Deserialize.state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 44: flowstate.command.v1.DeserializeResult.deserialized_state_ref:type_name -> flowstate.state.v1.StateRef
	24, // 45: flowstate.command.v1.DeserializeResult.state_ref:type_name -> flowstate.state.v1.StateRef
	46, // [46:46] is the sub-list for method output_type
	46, // [46:46] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_flowstate_command_v1_commands_proto_init() }
func file_flowstate_command_v1_commands_proto_init() {
	if File_flowstate_command_v1_commands_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flowstate_command_v1_commands_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransitResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*End); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Execute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelayResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Commit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Noop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoopResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Serialize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deserialize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeserializeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pause_WithTransit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_command_v1_commands_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delay_WithCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_flowstate_command_v1_commands_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AnyCommand_Transit)(nil),
		(*AnyCommand_Pause)(nil),
		(*AnyCommand_Resume)(nil),
		(*AnyCommand_End)(nil),
		(*AnyCommand_Execute)(nil),
		(*AnyCommand_Delay)(nil),
		(*AnyCommand_Commit)(nil),
		(*AnyCommand_Noop)(nil),
		(*AnyCommand_Serialize)(nil),
		(*AnyCommand_Deserialize)(nil),
	}
	file_flowstate_command_v1_commands_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AnyResult_Transit)(nil),
		(*AnyResult_Pause)(nil),
		(*AnyResult_Resume)(nil),
		(*AnyResult_End)(nil),
		(*AnyResult_Execute)(nil),
		(*AnyResult_Delay)(nil),
		(*AnyResult_Commit)(nil),
		(*AnyResult_Noop)(nil),
		(*AnyResult_Serialize)(nil),
		(*AnyResult_Deserialize)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flowstate_command_v1_commands_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flowstate_command_v1_commands_proto_goTypes,
		DependencyIndexes: file_flowstate_command_v1_commands_proto_depIdxs,
		MessageInfos:      file_flowstate_command_v1_commands_proto_msgTypes,
	}.Build()
	File_flowstate_command_v1_commands_proto = out.File
	file_flowstate_command_v1_commands_proto_rawDesc = nil
	file_flowstate_command_v1_commands_proto_goTypes = nil
	file_flowstate_command_v1_commands_proto_depIdxs = nil
}
