// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: flowstate/v1alpha1/commands.proto

package flowstatev1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StateCtxRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rev int64  `protobuf:"varint,2,opt,name=rev,proto3" json:"rev,omitempty"`
}

func (x *StateCtxRef) Reset() {
	*x = StateCtxRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateCtxRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateCtxRef) ProtoMessage() {}

func (x *StateCtxRef) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateCtxRef.ProtoReflect.Descriptor instead.
func (*StateCtxRef) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{0}
}

func (x *StateCtxRef) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StateCtxRef) GetRev() int64 {
	if x != nil {
		return x.Rev
	}
	return 0
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Command:
	//
	//	*Command_Transit
	//	*Command_Pause
	//	*Command_Resume
	//	*Command_End
	//	*Command_Execute
	//	*Command_Commit
	//	*Command_Delay
	Command isCommand_Command `protobuf_oneof:"command"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{1}
}

func (m *Command) GetCommand() isCommand_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *Command) GetTransit() *Transit {
	if x, ok := x.GetCommand().(*Command_Transit); ok {
		return x.Transit
	}
	return nil
}

func (x *Command) GetPause() *Pause {
	if x, ok := x.GetCommand().(*Command_Pause); ok {
		return x.Pause
	}
	return nil
}

func (x *Command) GetResume() *Resume {
	if x, ok := x.GetCommand().(*Command_Resume); ok {
		return x.Resume
	}
	return nil
}

func (x *Command) GetEnd() *End {
	if x, ok := x.GetCommand().(*Command_End); ok {
		return x.End
	}
	return nil
}

func (x *Command) GetExecute() *Execute {
	if x, ok := x.GetCommand().(*Command_Execute); ok {
		return x.Execute
	}
	return nil
}

func (x *Command) GetCommit() *Commit {
	if x, ok := x.GetCommand().(*Command_Commit); ok {
		return x.Commit
	}
	return nil
}

func (x *Command) GetDelay() *Delay {
	if x, ok := x.GetCommand().(*Command_Delay); ok {
		return x.Delay
	}
	return nil
}

type isCommand_Command interface {
	isCommand_Command()
}

type Command_Transit struct {
	Transit *Transit `protobuf:"bytes,1,opt,name=transit,proto3,oneof"`
}

type Command_Pause struct {
	Pause *Pause `protobuf:"bytes,2,opt,name=pause,proto3,oneof"`
}

type Command_Resume struct {
	Resume *Resume `protobuf:"bytes,3,opt,name=resume,proto3,oneof"`
}

type Command_End struct {
	End *End `protobuf:"bytes,4,opt,name=end,proto3,oneof"`
}

type Command_Execute struct {
	Execute *Execute `protobuf:"bytes,5,opt,name=execute,proto3,oneof"`
}

type Command_Commit struct {
	Commit *Commit `protobuf:"bytes,6,opt,name=commit,proto3,oneof"`
}

type Command_Delay struct {
	Delay *Delay `protobuf:"bytes,7,opt,name=delay,proto3,oneof"`
}

func (*Command_Transit) isCommand_Command() {}

func (*Command_Pause) isCommand_Command() {}

func (*Command_Resume) isCommand_Command() {}

func (*Command_End) isCommand_Command() {}

func (*Command_Execute) isCommand_Command() {}

func (*Command_Commit) isCommand_Command() {}

func (*Command_Delay) isCommand_Command() {}

type CommandResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*CommandResult_Transit
	//	*CommandResult_Pause
	//	*CommandResult_Resume
	//	*CommandResult_End
	//	*CommandResult_Execute
	//	*CommandResult_Commit
	//	*CommandResult_Delay
	Result isCommandResult_Result `protobuf_oneof:"result"`
}

func (x *CommandResult) Reset() {
	*x = CommandResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResult) ProtoMessage() {}

func (x *CommandResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResult.ProtoReflect.Descriptor instead.
func (*CommandResult) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{2}
}

func (m *CommandResult) GetResult() isCommandResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CommandResult) GetTransit() *TransitResult {
	if x, ok := x.GetResult().(*CommandResult_Transit); ok {
		return x.Transit
	}
	return nil
}

func (x *CommandResult) GetPause() *PauseResult {
	if x, ok := x.GetResult().(*CommandResult_Pause); ok {
		return x.Pause
	}
	return nil
}

func (x *CommandResult) GetResume() *ResumeResult {
	if x, ok := x.GetResult().(*CommandResult_Resume); ok {
		return x.Resume
	}
	return nil
}

func (x *CommandResult) GetEnd() *EndResult {
	if x, ok := x.GetResult().(*CommandResult_End); ok {
		return x.End
	}
	return nil
}

func (x *CommandResult) GetExecute() *ExecuteResult {
	if x, ok := x.GetResult().(*CommandResult_Execute); ok {
		return x.Execute
	}
	return nil
}

func (x *CommandResult) GetCommit() *CommitResult {
	if x, ok := x.GetResult().(*CommandResult_Commit); ok {
		return x.Commit
	}
	return nil
}

func (x *CommandResult) GetDelay() *DelayResult {
	if x, ok := x.GetResult().(*CommandResult_Delay); ok {
		return x.Delay
	}
	return nil
}

type isCommandResult_Result interface {
	isCommandResult_Result()
}

type CommandResult_Transit struct {
	Transit *TransitResult `protobuf:"bytes,1,opt,name=transit,proto3,oneof"`
}

type CommandResult_Pause struct {
	Pause *PauseResult `protobuf:"bytes,2,opt,name=pause,proto3,oneof"`
}

type CommandResult_Resume struct {
	Resume *ResumeResult `protobuf:"bytes,3,opt,name=resume,proto3,oneof"`
}

type CommandResult_End struct {
	End *EndResult `protobuf:"bytes,4,opt,name=end,proto3,oneof"`
}

type CommandResult_Execute struct {
	Execute *ExecuteResult `protobuf:"bytes,5,opt,name=execute,proto3,oneof"`
}

type CommandResult_Commit struct {
	Commit *CommitResult `protobuf:"bytes,6,opt,name=commit,proto3,oneof"`
}

type CommandResult_Delay struct {
	Delay *DelayResult `protobuf:"bytes,7,opt,name=delay,proto3,oneof"`
}

func (*CommandResult_Transit) isCommandResult_Result() {}

func (*CommandResult_Pause) isCommandResult_Result() {}

func (*CommandResult_Resume) isCommandResult_Result() {}

func (*CommandResult_End) isCommandResult_Result() {}

func (*CommandResult_Execute) isCommandResult_Result() {}

func (*CommandResult_Commit) isCommandResult_Result() {}

func (*CommandResult_Delay) isCommandResult_Result() {}

type Transit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCtx *StateCtxRef `protobuf:"bytes,1,opt,name=state_ctx,json=stateCtx,proto3" json:"state_ctx,omitempty"`
	FlowId   string       `protobuf:"bytes,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
}

func (x *Transit) Reset() {
	*x = Transit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transit) ProtoMessage() {}

func (x *Transit) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transit.ProtoReflect.Descriptor instead.
func (*Transit) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{3}
}

func (x *Transit) GetStateCtx() *StateCtxRef {
	if x != nil {
		return x.StateCtx
	}
	return nil
}

func (x *Transit) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

type TransitResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCtx *StateCtxRef `protobuf:"bytes,1,opt,name=state_ctx,json=stateCtx,proto3" json:"state_ctx,omitempty"`
}

func (x *TransitResult) Reset() {
	*x = TransitResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransitResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitResult) ProtoMessage() {}

func (x *TransitResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitResult.ProtoReflect.Descriptor instead.
func (*TransitResult) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{4}
}

func (x *TransitResult) GetStateCtx() *StateCtxRef {
	if x != nil {
		return x.StateCtx
	}
	return nil
}

type Pause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCtx *StateCtxRef `protobuf:"bytes,1,opt,name=state_ctx,json=stateCtx,proto3" json:"state_ctx,omitempty"`
}

func (x *Pause) Reset() {
	*x = Pause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pause) ProtoMessage() {}

func (x *Pause) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pause.ProtoReflect.Descriptor instead.
func (*Pause) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{5}
}

func (x *Pause) GetStateCtx() *StateCtxRef {
	if x != nil {
		return x.StateCtx
	}
	return nil
}

type PauseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCtx *StateCtxRef `protobuf:"bytes,1,opt,name=state_ctx,json=stateCtx,proto3" json:"state_ctx,omitempty"`
}

func (x *PauseResult) Reset() {
	*x = PauseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseResult) ProtoMessage() {}

func (x *PauseResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseResult.ProtoReflect.Descriptor instead.
func (*PauseResult) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{6}
}

func (x *PauseResult) GetStateCtx() *StateCtxRef {
	if x != nil {
		return x.StateCtx
	}
	return nil
}

type Resume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCtx *StateCtxRef `protobuf:"bytes,1,opt,name=state_ctx,json=stateCtx,proto3" json:"state_ctx,omitempty"`
}

func (x *Resume) Reset() {
	*x = Resume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resume) ProtoMessage() {}

func (x *Resume) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resume.ProtoReflect.Descriptor instead.
func (*Resume) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{7}
}

func (x *Resume) GetStateCtx() *StateCtxRef {
	if x != nil {
		return x.StateCtx
	}
	return nil
}

type ResumeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCtx *StateCtxRef `protobuf:"bytes,1,opt,name=state_ctx,json=stateCtx,proto3" json:"state_ctx,omitempty"`
}

func (x *ResumeResult) Reset() {
	*x = ResumeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeResult) ProtoMessage() {}

func (x *ResumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeResult.ProtoReflect.Descriptor instead.
func (*ResumeResult) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{8}
}

func (x *ResumeResult) GetStateCtx() *StateCtxRef {
	if x != nil {
		return x.StateCtx
	}
	return nil
}

type End struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCtx *StateCtxRef `protobuf:"bytes,1,opt,name=state_ctx,json=stateCtx,proto3" json:"state_ctx,omitempty"`
}

func (x *End) Reset() {
	*x = End{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *End) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*End) ProtoMessage() {}

func (x *End) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use End.ProtoReflect.Descriptor instead.
func (*End) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{9}
}

func (x *End) GetStateCtx() *StateCtxRef {
	if x != nil {
		return x.StateCtx
	}
	return nil
}

type EndResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCtx *StateCtxRef `protobuf:"bytes,1,opt,name=state_ctx,json=stateCtx,proto3" json:"state_ctx,omitempty"`
}

func (x *EndResult) Reset() {
	*x = EndResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndResult) ProtoMessage() {}

func (x *EndResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndResult.ProtoReflect.Descriptor instead.
func (*EndResult) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{10}
}

func (x *EndResult) GetStateCtx() *StateCtxRef {
	if x != nil {
		return x.StateCtx
	}
	return nil
}

type Execute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCtx *StateCtxRef `protobuf:"bytes,1,opt,name=state_ctx,json=stateCtx,proto3" json:"state_ctx,omitempty"`
}

func (x *Execute) Reset() {
	*x = Execute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Execute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execute) ProtoMessage() {}

func (x *Execute) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execute.ProtoReflect.Descriptor instead.
func (*Execute) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{11}
}

func (x *Execute) GetStateCtx() *StateCtxRef {
	if x != nil {
		return x.StateCtx
	}
	return nil
}

type ExecuteResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExecuteResult) Reset() {
	*x = ExecuteResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResult) ProtoMessage() {}

func (x *ExecuteResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResult.ProtoReflect.Descriptor instead.
func (*ExecuteResult) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{12}
}

type Delay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCtx *StateCtxRef `protobuf:"bytes,1,opt,name=state_ctx,json=stateCtx,proto3" json:"state_ctx,omitempty"`
	Duration string       `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *Delay) Reset() {
	*x = Delay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delay) ProtoMessage() {}

func (x *Delay) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delay.ProtoReflect.Descriptor instead.
func (*Delay) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{13}
}

func (x *Delay) GetStateCtx() *StateCtxRef {
	if x != nil {
		return x.StateCtx
	}
	return nil
}

func (x *Delay) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

type DelayResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateCtx *StateCtxRef `protobuf:"bytes,1,opt,name=state_ctx,json=stateCtx,proto3" json:"state_ctx,omitempty"`
}

func (x *DelayResult) Reset() {
	*x = DelayResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelayResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayResult) ProtoMessage() {}

func (x *DelayResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayResult.ProtoReflect.Descriptor instead.
func (*DelayResult) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{14}
}

func (x *DelayResult) GetStateCtx() *StateCtxRef {
	if x != nil {
		return x.StateCtx
	}
	return nil
}

type Commit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commands []*Command `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *Commit) Reset() {
	*x = Commit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{15}
}

func (x *Commit) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

type CommitResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CommandResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *CommitResult) Reset() {
	*x = CommitResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResult) ProtoMessage() {}

func (x *CommitResult) ProtoReflect() protoreflect.Message {
	mi := &file_flowstate_v1alpha1_commands_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResult.ProtoReflect.Descriptor instead.
func (*CommitResult) Descriptor() ([]byte, []int) {
	return file_flowstate_v1alpha1_commands_proto_rawDescGZIP(), []int{16}
}

func (x *CommitResult) GetResults() []*CommandResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_flowstate_v1alpha1_commands_proto protoreflect.FileDescriptor

var file_flowstate_v1alpha1_commands_proto_rawDesc = []byte{
	0x0a, 0x21, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0x2f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x74, 0x78, 0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x76, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x65, 0x76, 0x22, 0x85, 0x03, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x48, 0x00, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x12, 0x31, 0x0a,
	0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x48, 0x00, 0x52, 0x05,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x22, 0xb4, 0x03, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x12, 0x37, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x08, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x60, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x74, 0x78, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x0d, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x52, 0x65, 0x66, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x22, 0x45, 0x0a, 0x05, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x74, 0x78, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x22,
	0x4b, 0x0a, 0x0b, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x52,
	0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x22, 0x46, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x74, 0x78, 0x22, 0x4c, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x74,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x74, 0x78, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x74, 0x78, 0x22, 0x43, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x22, 0x49, 0x0a, 0x09, 0x45, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x74,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x74, 0x78, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x74, 0x78, 0x22, 0x47, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x3c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x52, 0x65,
	0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x22, 0x0f, 0x0a, 0x0d, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x61, 0x0a, 0x05,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x74, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x4b, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x52,
	0x65, 0x66, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x74, 0x78, 0x22, 0x41, 0x0a, 0x06,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x22,
	0x4b, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x3b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0xe8, 0x01, 0x0a,
	0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x6b, 0x61, 0x73, 0x69, 0x6d, 0x2f, 0x66, 0x6c, 0x6f,
	0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x72, 0x76, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x66,
	0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0xa2, 0x02, 0x03, 0x46, 0x58, 0x58, 0xaa, 0x02, 0x12, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x12, 0x46, 0x6c,
	0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0xe2, 0x02, 0x1e, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5c, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x13, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x3a, 0x3a, 0x56,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flowstate_v1alpha1_commands_proto_rawDescOnce sync.Once
	file_flowstate_v1alpha1_commands_proto_rawDescData = file_flowstate_v1alpha1_commands_proto_rawDesc
)

func file_flowstate_v1alpha1_commands_proto_rawDescGZIP() []byte {
	file_flowstate_v1alpha1_commands_proto_rawDescOnce.Do(func() {
		file_flowstate_v1alpha1_commands_proto_rawDescData = protoimpl.X.CompressGZIP(file_flowstate_v1alpha1_commands_proto_rawDescData)
	})
	return file_flowstate_v1alpha1_commands_proto_rawDescData
}

var file_flowstate_v1alpha1_commands_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_flowstate_v1alpha1_commands_proto_goTypes = []interface{}{
	(*StateCtxRef)(nil),   // 0: flowstate.v1alpha1.StateCtxRef
	(*Command)(nil),       // 1: flowstate.v1alpha1.Command
	(*CommandResult)(nil), // 2: flowstate.v1alpha1.CommandResult
	(*Transit)(nil),       // 3: flowstate.v1alpha1.Transit
	(*TransitResult)(nil), // 4: flowstate.v1alpha1.TransitResult
	(*Pause)(nil),         // 5: flowstate.v1alpha1.Pause
	(*PauseResult)(nil),   // 6: flowstate.v1alpha1.PauseResult
	(*Resume)(nil),        // 7: flowstate.v1alpha1.Resume
	(*ResumeResult)(nil),  // 8: flowstate.v1alpha1.ResumeResult
	(*End)(nil),           // 9: flowstate.v1alpha1.End
	(*EndResult)(nil),     // 10: flowstate.v1alpha1.EndResult
	(*Execute)(nil),       // 11: flowstate.v1alpha1.Execute
	(*ExecuteResult)(nil), // 12: flowstate.v1alpha1.ExecuteResult
	(*Delay)(nil),         // 13: flowstate.v1alpha1.Delay
	(*DelayResult)(nil),   // 14: flowstate.v1alpha1.DelayResult
	(*Commit)(nil),        // 15: flowstate.v1alpha1.Commit
	(*CommitResult)(nil),  // 16: flowstate.v1alpha1.CommitResult
}
var file_flowstate_v1alpha1_commands_proto_depIdxs = []int32{
	3,  // 0: flowstate.v1alpha1.Command.transit:type_name -> flowstate.v1alpha1.Transit
	5,  // 1: flowstate.v1alpha1.Command.pause:type_name -> flowstate.v1alpha1.Pause
	7,  // 2: flowstate.v1alpha1.Command.resume:type_name -> flowstate.v1alpha1.Resume
	9,  // 3: flowstate.v1alpha1.Command.end:type_name -> flowstate.v1alpha1.End
	11, // 4: flowstate.v1alpha1.Command.execute:type_name -> flowstate.v1alpha1.Execute
	15, // 5: flowstate.v1alpha1.Command.commit:type_name -> flowstate.v1alpha1.Commit
	13, // 6: flowstate.v1alpha1.Command.delay:type_name -> flowstate.v1alpha1.Delay
	4,  // 7: flowstate.v1alpha1.CommandResult.transit:type_name -> flowstate.v1alpha1.TransitResult
	6,  // 8: flowstate.v1alpha1.CommandResult.pause:type_name -> flowstate.v1alpha1.PauseResult
	8,  // 9: flowstate.v1alpha1.CommandResult.resume:type_name -> flowstate.v1alpha1.ResumeResult
	10, // 10: flowstate.v1alpha1.CommandResult.end:type_name -> flowstate.v1alpha1.EndResult
	12, // 11: flowstate.v1alpha1.CommandResult.execute:type_name -> flowstate.v1alpha1.ExecuteResult
	16, // 12: flowstate.v1alpha1.CommandResult.commit:type_name -> flowstate.v1alpha1.CommitResult
	14, // 13: flowstate.v1alpha1.CommandResult.delay:type_name -> flowstate.v1alpha1.DelayResult
	0,  // 14: flowstate.v1alpha1.Transit.state_ctx:type_name -> flowstate.v1alpha1.StateCtxRef
	0,  // 15: flowstate.v1alpha1.TransitResult.state_ctx:type_name -> flowstate.v1alpha1.StateCtxRef
	0,  // 16: flowstate.v1alpha1.Pause.state_ctx:type_name -> flowstate.v1alpha1.StateCtxRef
	0,  // 17: flowstate.v1alpha1.PauseResult.state_ctx:type_name -> flowstate.v1alpha1.StateCtxRef
	0,  // 18: flowstate.v1alpha1.Resume.state_ctx:type_name -> flowstate.v1alpha1.StateCtxRef
	0,  // 19: flowstate.v1alpha1.ResumeResult.state_ctx:type_name -> flowstate.v1alpha1.StateCtxRef
	0,  // 20: flowstate.v1alpha1.End.state_ctx:type_name -> flowstate.v1alpha1.StateCtxRef
	0,  // 21: flowstate.v1alpha1.EndResult.state_ctx:type_name -> flowstate.v1alpha1.StateCtxRef
	0,  // 22: flowstate.v1alpha1.Execute.state_ctx:type_name -> flowstate.v1alpha1.StateCtxRef
	0,  // 23: flowstate.v1alpha1.Delay.state_ctx:type_name -> flowstate.v1alpha1.StateCtxRef
	0,  // 24: flowstate.v1alpha1.DelayResult.state_ctx:type_name -> flowstate.v1alpha1.StateCtxRef
	1,  // 25: flowstate.v1alpha1.Commit.commands:type_name -> flowstate.v1alpha1.Command
	2,  // 26: flowstate.v1alpha1.CommitResult.results:type_name -> flowstate.v1alpha1.CommandResult
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_flowstate_v1alpha1_commands_proto_init() }
func file_flowstate_v1alpha1_commands_proto_init() {
	if File_flowstate_v1alpha1_commands_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flowstate_v1alpha1_commands_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateCtxRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransitResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*End); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Execute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelayResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Commit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowstate_v1alpha1_commands_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_flowstate_v1alpha1_commands_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Command_Transit)(nil),
		(*Command_Pause)(nil),
		(*Command_Resume)(nil),
		(*Command_End)(nil),
		(*Command_Execute)(nil),
		(*Command_Commit)(nil),
		(*Command_Delay)(nil),
	}
	file_flowstate_v1alpha1_commands_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CommandResult_Transit)(nil),
		(*CommandResult_Pause)(nil),
		(*CommandResult_Resume)(nil),
		(*CommandResult_End)(nil),
		(*CommandResult_Execute)(nil),
		(*CommandResult_Commit)(nil),
		(*CommandResult_Delay)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flowstate_v1alpha1_commands_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flowstate_v1alpha1_commands_proto_goTypes,
		DependencyIndexes: file_flowstate_v1alpha1_commands_proto_depIdxs,
		MessageInfos:      file_flowstate_v1alpha1_commands_proto_msgTypes,
	}.Build()
	File_flowstate_v1alpha1_commands_proto = out.File
	file_flowstate_v1alpha1_commands_proto_rawDesc = nil
	file_flowstate_v1alpha1_commands_proto_goTypes = nil
	file_flowstate_v1alpha1_commands_proto_depIdxs = nil
}
