syntax = "proto3";

package flowstate.v1alpha1;

import "flowstate/v1alpha1/commands.proto";
import "flowstate/v1alpha1/state.proto";

message DoRequest {
  repeated Command commands = 1;
}

message DoResponse {
  repeated CommandResult results = 1;
}

message WatchRequest {
  int64 since_rev = 1;
  bool since_latest = 2;
  map<string, string> labels = 3;
}

message WatchResponse {
  StateCtx state_ctx = 1;
}

service EngineService {
  rpc Do(DoRequest) returns (DoResponse) {}
  rpc Watch(WatchRequest) returns (stream WatchResponse) {}
}