syntax = "proto3";

package flowstate.v1alpha1;

import "flowstate/state/v1/state.proto";
import "flowstate/command/v1/commands.proto";

message ErrorConflict {
  repeated string committable_state_ids = 2;
}

message DoRequest {
  repeated flowstate.state.v1.StateContext state_contexts = 1;
  repeated flowstate.command.v1.AnyCommand commands = 3;
}

message DoResponse {
  repeated flowstate.state.v1.StateContext state_contexts = 1;
  repeated flowstate.command.v1.AnyResult results = 3;
}

message WatchRequest {
  int64 since_rev = 1;
  bool since_latest = 2;
  map<string, string> labels = 3;
}

message WatchResponse {
  flowstate.state.v1.State state = 1;
}

service EngineService {
  rpc Do(DoRequest) returns (DoResponse) {}
  rpc Watch(WatchRequest) returns (stream WatchResponse) {}
}